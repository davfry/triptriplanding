'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _applyRouterMiddleware = require('react-router/lib/applyRouterMiddleware');

var _applyRouterMiddleware2 = _interopRequireDefault(_applyRouterMiddleware);

var _Router = require('react-router/lib/Router');

var _Router2 = _interopRequireDefault(_Router);

var _browserHistory = require('react-router/lib/browserHistory');

var _browserHistory2 = _interopRequireDefault(_browserHistory);

var _useScroll = require('react-router-scroll/lib/useScroll');

var _useScroll2 = _interopRequireDefault(_useScroll);

var _gatsbyBrowser = require('gatsby-browser');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var runtime = require('gatsby/node_modules/offline-plugin/runtime');
runtime.install({
  onInstalled: function onInstalled() {
    console.log('App is ready for offline usage');
  }
});

var rootElement = document.getElementById('react-mount');
var rootRoute = require('./split-child-routes');
console.log('rootRoute', rootRoute);

var currentLocation = null;

_browserHistory2.default.listen(function (location) {
  console.log('current location', location);
  currentLocation = location;
  if (_gatsbyBrowser.onRouteChange) {
    console.warn('onRouteChange is now deprecated and will be removed in the next major Gatsby release (0.13). Please use onRouteUpdate instead. See the PR for more info (https://github.com/gatsbyjs/gatsby/pull/321).');
    (0, _gatsbyBrowser.onRouteChange)(location);
  }
});

function onUpdate() {
  if (_gatsbyBrowser.onRouteUpdate) {
    (0, _gatsbyBrowser.onRouteUpdate)(currentLocation);
  }
}

_reactDom2.default.render(_react2.default.createElement(_Router2.default, {
  history: _browserHistory2.default,
  routes: rootRoute,
  render: (0, _applyRouterMiddleware2.default)((0, _useScroll2.default)()),
  onUpdate: onUpdate
}), typeof window !== 'undefined' ? document.getElementById('react-mount') : void 0);